wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
list(cvcoj,crps_mccv)
}
crossval_runs
crossval_runs[1,1]
crossval_runs[1,2]
crossval_runs[2,1]
crossval_runs[1,1]
crossval_runs[2]
crossval_runs[2,2]
crossval_runs[1,1]
crossval_runs[,1]
ncol(crossval_runs[,1])
ncol(crossval_runs)
ncol(crossval_runs[1,1])
crossval_runs[1,1]
nrow(wm01)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
cvcoj
a=1
crossval_runs[,a]
crossval_runs[1,1]
crossval_runs[1,1][,1]
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
cvcoj
}
crossval_runs
cvcojmean <- foreach (a = 1:nrow(wm01),.combine=c('rbind')) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcojmean
cvcoj
crps_mccv
fcst_mc    = fx_fcst_kds(wm04,win_size,out_evhor,sampling)
crps_mc    = fx_crps_mc(wm04,fcst_mc,out_evhor,sampling)
crps_mc
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
wm05cv
rowMeans(wm05cv)
cvcoj
as.numeric(cvcoj)
c(as.numeric(cvcoj),rowMeans(wm05cv))
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
crossval_runs
crossval_runs <- foreach (k = cross_seq, .combine=c('cbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
crossval_runs
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
cvcojmean
crossval_runs
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
list(as.numeric(cvcoj),rowMeans(wm05cv))
}
crossval_runs
crossval_runs[1,1]
crossval_runs[1,2]
crossval_runs[1,1]
crossval_runs[2,1]
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
crossval_runs
cvcojmean <- foreach (a = 1:nrow(wm01),.combine=c('rbind')) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcojmean
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
(cvcoj)
}
cvcojmean
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
cvcojmean <- foreach (a = 1:nrow(wm01),.combine=c('rbind')) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcojmean
crossval_runs
cvcojmean <- foreach (a = 1:nrow(wm01),.combine=c("rbind")) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcrpsmean <- foreach (a = (nrow(wm01)+1):(2*nrow(wm01)),.combine=c("rbind")) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcojmean
cvcrpsmean
cvcrpsmean <- foreach (a = (nrow(wm01)+1):(2*nrow(wm01)),.combine=c("rbind")) %dopar%{
mean(crossval_runs[,a])
}
cvcrpsmean
crossval_runs
fx_int_cvfcst <- function(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,fcst_run){
def_evhor  = fx_evhor(wm01_01,h,in_sample_fr,s02,seas_bloc_ws,crossvalsize)
wm01       = wm01_01[,def_evhor[2]:def_evhor[3]]                # work matrix
# ------ Cross Validation ----------------
cross_seq     = seq(def_evhor[8],def_evhor[4]-max(ahead_t),round((def_evhor[4]-max(ahead_t)-def_evhor[7])/crossvalstps))
crossval_runs <- foreach (k = cross_seq, .combine=c('rbind')) %do%{
co_evhor    = fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      = wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      = fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      = wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      = fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   = fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   = fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       = fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      = fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
c(as.numeric(cvcoj),rowMeans(wm05cv))
}
cvcojmean <- foreach (a = 1:nrow(wm01),.combine=c("rbind")) %dopar%{
round(mean(crossval_runs[,a]))
}
cvcrpsmean <- foreach (a = (nrow(wm01)+1):(2*nrow(wm01)),.combine=c("rbind")) %dopar%{
mean(crossval_runs[,a])
}
if (fcst_run == F) {
return(list(cvcojmean,cvcrpsmean))
}
# ------ Forecasting & Verification ------
if (fcst_run == T) {
out_evhor  = fx_evhor(wm01_01,h,in_sample_fr,s02,seas_bloc_ws,0)
wm02       = fx_seas(wm01,s01,s02,sum_of_h,out_evhor)           # in-sample seasonality pattern
wm03       = wm01[,(out_evhor[4]+1):out_evhor[6]]               # out-sample original load data
wm04       = fx_unseas(wm01,wm02,s02,out_evhor)                 # in-out sample unseasonalised
fcst_mc    = fx_fcst_kds(wm04,win_size,out_evhor,sampling)
crps_mc    = fx_crps_mc(wm04,fcst_mc,out_evhor,sampling)
wm03fcst   = fx_fcst_wm(fcst_mc,cvcojmean,out_evhor,wm02)
wm05       = fx_crps_wm(crps_mc,cvcojmean,out_evhor,wm02)
return(list(wm03fcst,wm05,wm04[,1:out_evhor[7]]))
}
}
fx_int_cvfcst(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,TRUE)
fx_int_cvfcst(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,FALSE)
wl06       = fx_int_cvfcst(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,TRUE)
wl06       = fx_int_cvfcst(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
wl06       = fx_int_cvfcst(wm01_01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,T)
wv42
length(wv42)
wv42=wv42[1:15]
wv42
length(wv42)
wv45
sum(wv42*wv45)
opt_min_cusd
opt_max_cusd
wv46       = seq(0,sum(wv45),sum(wv45)/frontierstp)
wv46
wv42 %*% wm01_01
teste = wv42 %*% wm01_01
teste2 = teste/sum(wv42)
sum(wv42)
teste = wv42 %*% wm01_01 / sum(wv42)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fv01 = wv42 %*% wm01_01 / sum(wv42)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fv01
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
debug(fx_int_cvfcst)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
debug(fx_evhor)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
evhor_out
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
ncol(wm01_01)
ncol(wv43)
ncol(wv42)
fv01
fv02 = matrix(fv01)
ncol(fv02)
fv02 = as.matrix(fv01)
ncol(fv02)
fv01 = as.matrix(wv42 %*% wm01_01 / sum(wv42))
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
ncol(wm01_01)
fv01 = as.matrix(wv42 %*% wm01_01 / sum(wv42))
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
ncol(wm01_01)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
rbind(wv42,wv42)
rbind(wv42,0)
fv01 = rbind(wv42 %*% wm01_01 / sum(wv42),0)
View(fv01)
fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
undebug(fx_int_cvfcst)
undebug(fx_evhor)
fl02 = fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
fl02
fx_optgrp_crps <- function(wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
fv01 <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02 <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
} else {fl02 <- 10}
return(fl02)
}
fx_optgrp_crps(wv42)
sum(wv42*wv45
)
opt_min_cusd = 0
fx_optgrp_crps(wv42)
fx_optgrp_crps <- function(wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
fv01 <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02 <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
} else {fl02 <- 10}
return(fl02[[1]][1,1])
}
fx_optgrp_crps(wv42)
fx_optgrp_crps <- function(wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
fv01 <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02 <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
} else {fl02 <- 10}
return(fl02[[2]][1,1])
}
fx_optgrp_crps(wv42)
fx_optgrp_crps <- function(wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
fv01 <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02 <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
} else {fl02 <- 10}
return(as.numeric(fl02[[2]][1,1]))
}
fx_optgrp_crps(wv42)
wm05cv
wm04cv
co_evhor    <- fx_evhor(wm01,k,0,s02,seas_bloc_ws,0)
wm01cv      <- wm01[,co_evhor[2]:co_evhor[3]]                  # work matrix
wm02cv      <- fx_seas(wm01cv,s01,s02,sum_of_h,co_evhor)       # in-sample seasonality pattern
wm03cv      <- wm01cv[,(co_evhor[4]+1):co_evhor[6]]            # out-sample original load data
wm04cv      <- fx_unseas(wm01cv,wm02cv,s02,co_evhor)           # in-out sample unseasonalised
fcst_mccv   <- fx_fcst_kds(wm04cv,win_size,co_evhor,sampling)
crps_mccv   <- fx_crps_mc(wm04cv,fcst_mccv,co_evhor,sampling)
cvcoj       <- fx_crossover(fcst_mccv,crps_mccv,wm02cv,co_evhor)
wm05cv      <- fx_crps_wm(crps_mccv,cvcoj,co_evhor,wm02cv)
wm04cv
wm05cv
wm04cv
rowMeans(wm05cv)
fx_sd_mymat(wm04cv)
fx_sd_mymat(wm04cv)
nrow(wm04cf)
nrow(wm04cv)
fx_sd_mymat <- function (mymat){
sdev <- foreach (i <- 1:nrow(mymat),.combine=c("cbind")) %do%{
sd(mymat[i,])
}
return(sdev)
}
fx_sd_mymat(wm04cv)
fx_sd_mymat <- function (mymat){
sdev <- foreach (i <- 1:nrow(mymat),.combine=c("cbind")) %do%{
sd(mymat[i,])
}
return(as.numeric(sdev))
}
fx_sd_mymat(wm04cv)
sd_evhor  <- fx_evhor(fv01,h,in_sample_fr,s02,seas_bloc_ws,crossvalsize)
sd_evhor
3973-2966
wm01_01[sd_evhor[2]:sd_evhor[1]
]
wm01_01[sd_evhor[2]:sd_evhor[1]]
length(wm01_01[sd_evhor[2]:sd_evhor[1]])
ncol(wm01_01[sd_evhor[2]:sd_evhor[1]])
wm01_01[,sd_evhor[2]:sd_evhor[1]]
sd_evhor <- fx_evhor(fv01,h,in_sample_fr,s02,seas_bloc_ws,crossvalsize)
fv01     <- rbind(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42),0)
fv01     <- rbind(wv42 %*% wm01_01[sd_evhor[2]:sd_evhor[1]] / sum(wv42),0)
fv01     <- rbind(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42),0)
View(fv01)
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
wv42
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
wv42
wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]]
wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h))
teste =     fv02   <- decompose(msts(fv01[1,],seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
teste = msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h))
teste
1008/s02
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
periods=c(s01/sum_of_h,s02/sum_of_h)
periods
wv31i  <- wm01[j,1:def_evhor[7]]
fv01     <- wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42)
fv01     <- as.numeric(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42))
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
plot(fv02)
fv03     <- fv01 - fv02$seasonal
plot(fv03)
fl02<-10
fv01 <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02 <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
result <- as.numeric(fl02[[2]][1,1])
result
fv01     <- as.numeric(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42))
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
fv03     <- fv01 - fv02$seasonal
result   <- sd(fv03)
result
fx_optgrp_crps(wv42)
fx_optgrp_sdev(wv42)
fx_optgrp_crps <- function (wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
fv01   <- rbind(wv42 %*% wm01_01 / sum(wv42),0)
fl02   <- fx_int_cvfcst(fv01,h,in_sample_fr,s01,s02,sum_of_h,win_size,seas_bloc_ws,crossvalsize,F)
result <- as.numeric(fl02[[2]][1,1])
} else {result <- 10}
return (result)
}
fx_optgrp_sdev <- function (wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
sd_evhor <- fx_evhor(fv01,h,in_sample_fr,s02,seas_bloc_ws,crossvalsize)
fv01     <- as.numeric(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42))
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
fv03     <- fv01 - fv02$seasonal
result   <- sd(fv03)
} else {result <- 10}
return (result)
}
fx_optgrp_sdev(wv42)
fx_optgrp_crps(wv42)
fx_optgrp_sdev(wv42)
fx_optgrp_sdev <- function (wv42){
if (sum(wv42*wv45) > opt_min_cusd & sum(wv42*wv45) <= opt_max_cusd){
sd_evhor <- fx_evhor(wm01_01,h,in_sample_fr,s02,seas_bloc_ws,crossvalsize)
fv01     <- as.numeric(wv42 %*% wm01_01[,sd_evhor[2]:sd_evhor[1]] / sum(wv42))
fv02     <- decompose(msts(fv01,seasonal.periods=c(s01/sum_of_h,s02/sum_of_h)))
fv03     <- fv01 - fv02$seasonal
result   <- sd(fv03)
} else {result <- 10}
return (result)
}
fx_optgrp_sdev(wv42)
wm01_02l
wm01_02l[[2]]
nrow(rndgrp[[2]])
nrow(wm01_02l[[2]])
ncol(wm01_02l[[2]])
wm01_02l[[2]][1,]
teste <- foreach (i = 1:15,.combine=c("rbind")) %dopar%{
fx_optgrp_crps(wm01_02l[[2]][i,])
}
teste <- foreach (i = 1:15,.combine=c("rbind")) %do%{
fx_optgrp_crps(wm01_02l[[2]][i,])
}
teste
opt_min_cusd
opt_max_cusd
sum(wv45)
teste <- foreach (i = 1:15,.combine=c("rbind")) %do%{
fx_optgrp_crps(wm01_02l[[2]][i,])
fx_optgrp_sdev(wm01_02l[[2]][i,])
}
teste <- foreach (i = 1:15,.combine=c("rbind")) %do%{
c(fx_optgrp_crps(wm01_02l[[2]][i,]),fx_optgrp_sdev(wm01_02l[[2]][i,]))
}
teste
plot(teste[,1],teste[,2])
teste <- foreach (i = 1:45,.combine=c("rbind")) %do%{
c(fx_optgrp_crps(wm01_02l[[2]][i,]),fx_optgrp_sdev(wm01_02l[[2]][i,]))
}
plot(teste[,1],teste[,2])
wv46
frontierstp
nrow(wm01_01)
optgrp_plA <- foreach (i = 1:frontierstp,
.packages=c("forecast","rgenoud"),
.combine=c("rbind")) %dopar%{
opt_min_cusd  = wv46[i]
opt_max_cusd  = wv46[i+1]
optgrp   <- genoud(fx_optgrp_sdev, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
cat("\nDone stepwise frontier",i,"of",frontierstp)
optgrp$par
}
opt_min_cusd
opt_max_cusd
optgrp   <- genoud(fx_optgrp_sdev, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
optgrp$par
View(teste)
fx_optgrp_sdev(optgrp$par)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
cl  <- makeCluster(detectCores())
registerDoParallel(cl)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=1)
optgrp   <- genoud(fx_optgrp_crps, nvars=nrow(wm01_01), max.generations=300, wait.generations=20,
starting.values=c(rep(1,nrow(wm01_01))),
Domains = cbind(c(rep(0,nrow(wm01_01))),c(rep(1,nrow(wm01_01)))),
data.type.int=TRUE,  int.seed=1,
print.level=2)
